name: Lint

on:
  push:
    branches: [main]
  
  pull_request:
    branches: [main]

defaults:
  run:
    working-directory: ./api
    
jobs:
  # run-linters:
  #   name: Run Linters
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Check out git repository
  #       uses: actions/checkout@v2

  #     - name: Setup Nodejs 
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: 16

  #     - name: Intsall Node.js Dependencies
  #       run: npm ci
      
  #     - name: Run Linters
  #       run: npm run lint:fix
  #       continue-on-error: true

  docker:
    name: Build Docker And Push On To DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login Docker Hub
        uses: docker/docker-login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_ACCOUNT }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      # - name: Setup Docker Buildx
      #   uses: docker/setup-buildx-action@v1
      #   id: buildx

      # - name: Build And Push Docker Image
      #   uses: docker/build-push-action@v2
      #   id: docker_build
      #   with:
      #     context: ./
      #     file: ./Dockerfile.prod
      #     builder: ${{ steps.buildx.outputs.name }}
      #     push: true
      #     tags: ${{ secrets.DOCKERHUB_ACCOUNT }}/timesheet_api

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build And Push Docker Image With v3
        uses: docker/build-push-action@v3
        with:
          context: ./
          file: ./Dockerfile.prod
          push: true
          tags: ${{ secrets.DOCKERHUB_ACCOUNT }}/timesheet_api

      - name: Verify
        run: echo ${{ steps.docker_build.outputs.digest }}
    

  